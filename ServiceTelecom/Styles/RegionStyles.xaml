<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!--#region Style Label-->

    <Style x:Key="LabelStyle1" TargetType="Label">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Unbounded Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

        <!--#endregion-->
    
    <!--#region Style ComboBox-->

    <Style x:Key="ComboBoxStyle1" TargetType="ComboBox">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Unbounded Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0,-3,0,0"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Padding" Value="0,6,0,0"/>
        <Setter Property="SelectedIndex" Value="0"/>
    </Style>

    

    <!--#endregion-->

    <!--#region Style ComboBox Выпадающий-->
    <Style x:Key="ComboBoxStyle3" TargetType="ComboBox">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Unbounded Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0,-3,0,0"/>
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Padding" Value="0,6,0,0"/>
        <Setter Property="SelectedIndex" Value="0"/>
    </Style>
    
    <!--#region Style ComboBox Выпадающий-->
    <Style x:Key="ComboBoxStyle2" TargetType="ComboBox">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Unbounded Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0,-3,0,0"/>
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Padding" Value="0,10,0,0"/>
        <Setter Property="SelectedIndex" Value="0"/>
    </Style>

    <!--#endregion-->

    <!--#region Style TextBox5-->
    <Style x:Key="TextBoxStyle5" TargetType="TextBox">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Unbounded Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="CaretBrush" Value="{StaticResource titleFontColor2}"/>
        <Setter Property="BorderBrush" Value="{StaticResource titleFontColor3}"/>
        <Setter Property="BorderThickness" Value="0,0,0,4"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,5,0,0"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    
    <!--#region Style TextBox4-->
    <Style x:Key="TextBoxStyle4" TargetType="TextBox">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Unbounded Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="CaretBrush" Value="{StaticResource titleFontColor2}"/>
        <Setter Property="BorderBrush" Value="{StaticResource titleFontColor3}"/>
        <Setter Property="BorderThickness" Value="0,0,0,4"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,2,0,0"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <!--#region Style TextBox3-->
    <Style x:Key="TextBoxStyle3" TargetType="TextBox">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Unbounded Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="CaretBrush" Value="{StaticResource titleFontColor2}"/>
        <Setter Property="BorderBrush" Value="{StaticResource titleFontColor3}"/>
        <Setter Property="BorderThickness" Value="0,0,0,4"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,10,0,0"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    
    <!--#region Style TextBox2-->
    <Style x:Key="TextBoxStyle2" TargetType="TextBox">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Unbounded Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="CaretBrush" Value="{StaticResource titleFontColor2}"/>
        <Setter Property="BorderBrush" Value="{StaticResource titleFontColor3}"/>
        <Setter Property="BorderThickness" Value="0,0,0,4"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,10,0,0"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    
    <!--#region Style TextBox-->
    <Style x:Key="TextBoxStyle1" TargetType="TextBox">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Unbounded Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="CaretBrush" Value="{StaticResource titleFontColor2}"/>
        <Setter Property="BorderBrush" Value="{StaticResource titleFontColor3}"/>
        <Setter Property="BorderThickness" Value="0,0,0,4"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,20,0"/>
        <Setter Property="Padding" Value="0,8,0,0"/>
    </Style>

    <!--#endregion-->

    <!--#region Style Datagrid-->

    <!--Стиль rows Datagrid-->
    <Style x:Key="DataGridContentCellCentering" TargetType="DataGridCell">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Unbounded Light"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonFontColor3}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Стиль rows Datagrid-->
    <Style x:Key="DataGridContentCellCentering2" TargetType="DataGridCell">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Unbounded Light"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonFontColor3}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--1 Стиль DataGrid-->
    <Style x:Key="dataGridStyle" TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource buttonFontColor3}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="RowBackground" Value="{StaticResource buttonFontColor2}" />
        <Setter Property="AlternatingRowBackground" Value="White" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="RowHeight" Value="35"/>
    </Style>

    <!--2 Стиль DataGrid-->
    <Style x:Key="dataGridStyle2" TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource buttonFontColor3}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="RowBackground" Value="{StaticResource buttonFontColor2}" />
        <Setter Property="AlternatingRowBackground" Value="White" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="RowHeight" Value="200"/>
    </Style>
    
    <!--3 Стиль DataGrid-->
    <Style x:Key="dataGridStyle3" TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource buttonFontColor3}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="RowBackground" Value="{StaticResource buttonFontColor2}" />
        <Setter Property="AlternatingRowBackground" Value="White" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="RowHeight" Value="40"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Visible"/>
    </Style>
    <!--3 Стиль DataGrid-->
    <Style x:Key="dataGridStyle4" TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource buttonFontColor3}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="RowBackground" Value="{StaticResource buttonFontColor2}" />
        <Setter Property="AlternatingRowBackground" Value="White" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="RowHeight" Value="60"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Visible"/>
    </Style>
    
    <!--Стиль для расположения элемента Colums Text DataGrid-->
    <Style x:Key="dataGridCentAl" TargetType="DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Romul"/>
    </Style>

    <!--#endregion-->

    <!--#region Style Button-->

    <Style x:Key="menuButtonStyleOne" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource buttonFontColor11}"/>
        <Setter Property="Background" Value="{StaticResource buttonFontColor3}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Bonche Light"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="18" Height="18"
                                        CornerRadius="9"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonFontColor4}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="menuButtonStyleTwo" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource buttonFontColor11}"/>
        <Setter Property="Background" Value="{StaticResource buttonFontColor1}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Bonche Light"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="18" Height="18"
                                        CornerRadius="9"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Margin="0,-2,0,0" Cursor=""/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonFontColor12}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="menuButtonStyleThree" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource buttonFontColor11}"/>
        <Setter Property="Background" Value="{StaticResource buttonFontColor13}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Bonche Light"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="18" Height="18"
                                        CornerRadius="9"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Margin="0,-1,0,0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonFontColor2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="menuButtonStyleFour" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Romul"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource buttonFontColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="100" Height="25"
                                        CornerRadius="6"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonFontColor4}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="menuButtonStyleFive" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Romul"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource buttonFontColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="100" Height="25"
                                        CornerRadius="6"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonFontColor4}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="menuButtonStyleSix" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Romul"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource buttonFontColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="330" Height="35"
                                        CornerRadius="6"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonFontColor4}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="menuButtonStyleSeven" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Romul"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource buttonFontColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="260" Height="35"
                                        CornerRadius="6"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonFontColor4}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="menuButtonStyleEight" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Romul"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource buttonFontColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="120" Height="34"
                                        CornerRadius="6"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonFontColor4}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="menuButtonStyleNine" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Romul"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource buttonFontColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="160" Height="34"
                                        CornerRadius="6"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonFontColor4}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="menuButtonStyleAll" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Romul"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource buttonFontColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="150" Height="35"
                                        CornerRadius="6"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonFontColor4}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="menuButtonStyleCheck" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Romul"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource buttonFontColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="40" Height="34"
                                        CornerRadius="6"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonFontColor4}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region Style RadioButton-->

    <!--Menu RadioButton-->
    <Style x:Key="menuRadioButton" TargetType="RadioButton">
        <!--Normal RadioButton style-->
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource titleFontColor5}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="4,0,0,0"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" 
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--RadioButton Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="-5,0,0,5"/>
                <Setter Property="Background" Value="{StaticResource buttonFontColor15}"/>
                <Setter Property="Foreground" Value="{StaticResource titleFontColor5}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Menu RadioButton icon-->
    <Style x:Key="menuButtonIcom" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Tag,RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="10,0,10,0"/>
    </Style>

    <!--Menu RadioButton text-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground,RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="Bonche Light"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="18.5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--#endregion-->

    <!--#region Style TextBlock-->
   
    <!--Message TextBlock-->
    <Style x:Key="messageTextBlockStyle1" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontFamily" Value="Romul"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="messageTextBlockStyle2" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontFamily" Value="Romul"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="messageTextBlockStyle3" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontFamily" Value="Romul"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="messageTextBlockStyle4" TargetType="TextBlock">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontFamily" Value="Romul"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="messageTextBlockStyle5" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="Romul"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <!--#endregion-->

    <!--#region Style DatePickerStyle-->
    
    <Style x:Key="DatePickerStyle1" TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Unbounded Light"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" 
                    Padding="{TemplateBinding Padding}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" 
                                        Storyboard.TargetProperty="Opacity" 
                                        Storyboard.TargetName="PART_DisabledVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root" 
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledBrush" 
                                Color="#A5FFFFFF"/>
                                <ControlTemplate x:Key="DropDownButtonTemplate" 
                                TargetType="{x:Type Button}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                    To="MouseOver"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" 
                                                    To="Pressed"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation Duration="0" 
                                                        To="#FF448DCA" 
                                                        Storyboard.TargetProperty="(Border.Background).
                                                        (SolidColorBrush.Color)" 
                                                        Storyboard.TargetName="Background"/>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" 
                                                        Duration="00:00:00.001" 
                                                        Storyboard.TargetProperty="(Border.Background).
                                                        (GradientBrush.GradientStops)[3].
                                                        (GradientStop.Color)" 
                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" 
                                                            Value="#7FFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" 
                                                        Duration="00:00:00.001" 
							Storyboard.TargetProperty="
                                                        (Border.Background).
							(GradientBrush.GradientStops)[2].
                                                        (GradientStop.Color)" 
                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" 
                                                            Value="#CCFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" 
                                                        Duration="00:00:00.001" 
							Storyboard.TargetProperty=
                                                        "(Border.Background).
                                                        (GradientBrush.GradientStops)[1].
                                                        (GradientStop.Color)" Storyboard.TargetName=
                                                        "BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" 
                                                            Value="#F2FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" 
                                                        Duration="00:00:00.001" 
                                                        Storyboard.TargetProperty="(Border.Background).
                                                        (SolidColorBrush.Color)" 
                                                        Storyboard.TargetName="Background">
                                                            <SplineColorKeyFrame KeyTime="0" 
                                                            Value="#FF448DCA"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="0" 
                                                        Duration="00:00:00.001" 
                                                        Storyboard.TargetProperty=
                                                        "(UIElement.Opacity)" 
                                                        Storyboard.TargetName="Highlight">
                                                            <SplineDoubleKeyFrame KeyTime="0" 
                                                            Value="1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" 
                                                        Duration="00:00:00.001" 
                                                        Storyboard.TargetProperty="(Border.Background).
                                                        (GradientBrush.GradientStops)[1].
                                                        (GradientStop.Color)" 
                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" 
                                                            Value="#EAFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" 
                                                        Duration="00:00:00.001" 
                                                        Storyboard.TargetProperty="(Border.Background).
                                                        (GradientBrush.GradientStops)[2].
                                                        (GradientStop.Color)" 
                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" 
                                                            Value="#C6FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" 
                                                        Duration="00:00:00.001" 
                                                        Storyboard.TargetProperty="(Border.Background).
                                                        (GradientBrush.GradientStops)[3].
                                                        (GradientStop.Color)" 
                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" 
                                                            Value="#6BFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" 
                                                        Duration="00:00:00.001" 
                                                        Storyboard.TargetProperty="(Border.Background).
                                                        (GradientBrush.GradientStops)[0].
                                                        (GradientStop.Color)" 
                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" 
                                                            Value="#F4FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid Background="#11FFFFFF" 
                                        FlowDirection="LeftToRight" 
                                        HorizontalAlignment="Center" Height="45" 
                                        Margin="0" VerticalAlignment="Center" 
                                        Width="45">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="23*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                            </Grid.RowDefinitions>
                                            <Border x:Name="Highlight" 
                                            BorderBrush="#FF45D6FA" 
                                            BorderThickness="1" Grid.ColumnSpan="4" 
                                            CornerRadius="0,0,1,1" Margin="-1" 
                                            Opacity="0" Grid.Row="0" 
                                            Grid.RowSpan="4"/>
                                            <Border x:Name="Background" 
                                            BorderBrush="#FFFFFFFF" 
                                            BorderThickness="1" Background="#FF1F3B53" 
                                            Grid.ColumnSpan="4" CornerRadius=".5" 
                                            Margin="0,-1,0,0" Opacity="1" 
                                            Grid.Row="1" Grid.RowSpan="3"/>
                                            <Border x:Name="BackgroundGradient" 
                                            BorderBrush="#BF000000" 
                                            BorderThickness="1" Grid.ColumnSpan="4" 
                                            CornerRadius=".5" Margin="0,-1,0,0" 
                                            Opacity="1" Grid.Row="1" 
                                            Grid.RowSpan="3">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint=".7,1" 
                                                    StartPoint=".7,0">
                                                        <GradientStop Color="#FFFFFFFF" 
                                                        Offset="0"/>
                                                        <GradientStop Color="#F9FFFFFF" 
                                                        Offset="0.375"/>
                                                        <GradientStop Color="#E5FFFFFF" 
                                                        Offset="0.625"/>
                                                        <GradientStop Color="#C6FFFFFF" 
                                                        Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Rectangle Grid.ColumnSpan="4" 
                                            Grid.RowSpan="1" StrokeThickness="1">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="0.3,-1.1" 
                                                    StartPoint="0.46,1.6">
                                                        <GradientStop Color="#FF4084BD"/>
                                                        <GradientStop Color="#FFAFCFEA" 
                                                        Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush EndPoint="0.48,-1" 
                                                    StartPoint="0.48,1.25">
                                                        <GradientStop Color="#FF494949"/>
                                                        <GradientStop Color="#FF9F9F9F" 
                                                        Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                            </Rectangle>
                                           
                                            <TextBlock Margin="2,0" Grid.Row="1" 
                                            Grid.RowSpan="3" Grid.ColumnSpan="4" 
                                            Grid.Column="0" 
                                            Text="{Binding Source={x:Static system:DateTime.Now}, StringFormat=dd}" 
                                            HorizontalAlignment="Center" 
                                            VerticalAlignment="Center" FontSize="18" 
                                            FontFamily="Arial Bold"/>
                                            <Ellipse Grid.ColumnSpan="4" 
                                            Fill="#FFFFFFFF" HorizontalAlignment="Center" 
                                            Height="3" StrokeThickness="0" 
                                            VerticalAlignment="Center" Width="3"/>
                                            <Border x:Name="DisabledVisual" 
                                            BorderBrush="#B2FFFFFF" BorderThickness="1" 
                                            Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" 
                                            Opacity="0" Grid.Row="0" 
                                            Grid.RowSpan="4"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="50"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button" Grid.Column="1" 
                            Foreground="{TemplateBinding Foreground}" 
                                Focusable="False" HorizontalAlignment="Center"
                                 Margin="3,0,3,0" Grid.Row="0" 
                                 Template="{StaticResource DropDownButtonTemplate}" 
                                 VerticalAlignment="Center" />
                            <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" 
                            Focusable="{TemplateBinding Focusable}" 
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               Grid.Row="0" 
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                               FontSize="{TemplateBinding FontSize}"/>
                            <Grid x:Name="PART_DisabledVisual" 
                            Grid.ColumnSpan="2" Grid.Column="0" 
                            IsHitTestVisible="False" Opacity="0" 
                            Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Fill="#A5FFFFFF" 
                                RadiusY="1" Grid.Row="0" RadiusX="1"/>
                                <Rectangle Grid.Column="1" Fill="#A5FFFFFF" 
                                Height="18" Margin="3,0,3,0" 
                                RadiusY="1" Grid.Row="0" 
                                RadiusX="1" Width="19"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="
                                True" Placement="Bottom" 
                                PlacementTarget="{Binding ElementName=PART_TextBox}" 
                                StaysOpen="False"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static 
                        SystemParameters.HighContrast}}" Value="false">
                            <Setter Property="Foreground" 
                            TargetName="PART_TextBox" Value="{Binding Foreground, 
                            RelativeSource={RelativeSource TemplatedParent}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--#endregion-->

    <!--#region Style CheckBoxStyle-->

    <Style x:Key="CheckBoxStyle1" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="SkyBlue" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
                                    Width="30"
                                    Height="30"
                                    Background="White"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    ClipToBounds="True">
                                <Path x:Name="CheckMark"
                                      Width="14"
                                      Height="14"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M27.903015,0L32,4.0970465 12.369019,23.728029 11.685974,24.520998 0,14.441042 3.7819824,10.054994 11.330017,16.567019z"
                                      Fill="#0abceb"
                                      Stretch="Fill"
                                      Stroke="#0abceb"
                                      StrokeEndLineCap="Round"
                                      StrokeStartLineCap="Round"
                                      StrokeThickness="1" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="5,0,0,0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="Gray" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
</ResourceDictionary>